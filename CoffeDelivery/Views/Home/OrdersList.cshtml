@model IEnumerable<CoffeDelivery.Models.Order>
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

@{
    ViewData["Title"] = "OrdersList";
}

<h1>Заказы</h1>


<table class="table">
    <thead>
        <tr>
           
            <th>
                @Html.DisplayNameFor(model => model.UserId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DishId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>


        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                
                <td>
                    @Html.DisplayFor(modelItem => item.UserId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DishId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>

            </tr>
        }
    </tbody>
</table>
<script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
<script>
    "use strict";
    var connection = new signalR.HubConnectionBuilder().withUrl("/coffeDeliveryHub").build();
    connection
        .start()
        .catch(() => {
            alert("Error while establishing connection");
        });
    connection.on("@Configuration["RabbitMq:OrdersChangedMsg"]", function () {
        window.location.reload();
    });
</script>
